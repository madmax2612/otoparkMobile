{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isArray.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/unique.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isString.ts","../../src/logic/getFieldsValues.ts","../../src/utils/deepMerge.ts","../../src/utils/isSameError.ts","../../src/logic/shouldRenderBasedOnError.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isBoolean.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/isPrimitive.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getFieldArrayParentName.ts","../../src/logic/getIsFieldsDifferent.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","o","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","Super","NewTarget","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","_defineProperty","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","from","HTMLElement","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","isObjectType","isNullOrUndefined","test","input","replace","match","mathNumber","mathQuote","originalString","set","path","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isObject","data","entries","reduce","previous","val","filter","Boolean","defaultValue","unique","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","element","defaultResult","validResult","map","attributes","getFieldValue","fieldsRef","unmountFieldsStateRef","current","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","unset","updatePath","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","removeAllEventListeners","disconnect","search","output","isString","startsWith","find","deepMerge","source","targetValue","sourceValue","types","message","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","RegExp","validationData","isRegex","getValidateError","isBoolean","validateAllFieldCriteria","a","required","maxLength","minLength","min","max","pattern","validate","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","maxLengthValue","minLengthValue","inputLength","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","validateError","validationResult","validateFunction","validateResult","getPath","pathWithIndex","isPrimitive","getInnerPath","flat","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","indexOf","getIsFieldsDifferent","referenceArray","differenceArray","dataA","dataB","isMatchFieldArrayName","searchName","names","some","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","useForm","reValidateMode","resolver","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","Set","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeRef","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","String","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","getFieldsValues","shouldSkipValidation","skipValidation","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","isEmptyDefaultValue","isEmptyUnmountFields","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","callback","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","prop","control","validateSchemaIsValid","FormContext","React.createContext","_unsupportedIterableToArray","minLen","n","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_arrayLikeToArray","len","arr2"],"mappings":"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","file":"static/js/0.13dd6a58.chunk.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\n              .length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  }\n\n  return target;\n}\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isUndefined from '../utils/isUndefined';\nimport isArray from '../utils/isArray';\n\nexport default function getIsFieldsDifferent(\n  referenceArray: unknown[],\n  differenceArray: unknown[],\n) {\n  if (\n    !isArray<any>(referenceArray) ||\n    !isArray<any>(differenceArray) ||\n    referenceArray.length !== differenceArray.length\n  ) {\n    return true;\n  }\n\n  for (let i = 0; i < referenceArray.length; i++) {\n    const dataA = referenceArray[i];\n    const dataB = differenceArray[i];\n\n    if (\n      isUndefined(dataB) ||\n      Object.keys(dataA).length !== Object.keys(dataB).length\n    ) {\n      return true;\n    }\n\n    for (const key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: () => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport getIsFieldsDifferent from './logic/getIsFieldsDifferent';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnAll },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          getIsFieldsDifferent(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          name === '' ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation =\n            !isOnAll &&\n            skipValidation({\n              isBlurEvent,\n              isReValidateOnChange,\n              isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current,\n              ...modeRef.current,\n            });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolver) {\n            const { errors } = await resolver(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute:', ref);\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && option.ref === ref;\n          })\n        : ref === field.ref)\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      callback: SubmitHandler<TSubmitFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await callback(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n      fieldsRef.current &&\n        process.env.NODE_ENV === 'production' &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    ...(resolver ? { validateSchemaIsValid: validateResolver } : {}),\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}"],"sourceRoot":""}
{"version":3,"sources":["Components/useHooks/LoginAdmin.js","Components/Admin/Login/Login.js","Assets/otoparkLogo.png","Assets/mumbai.png"],"names":["LoginAdminHooks","useForm","register","handleSubmit","errors","useState","redirect","setRedirect","to","className","onSubmit","data","e","preventDefault","console","log","class","type","required","maxLength","email","style","margin","color","aria-hidden","placeholder","id","name","ref","Password","value","for","align","href","variant","Login","props","handleChange","target","formValues","state","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","length","test","event","isSubmitting","Object","values","every","Boolean","alert","key","password","this","height","width","src","require","alt","paddingBottom","position","bottom","opacity","Component","module","exports"],"mappings":"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","file":"static/js/18.332b5411.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../Admin/Login/Login.css'\r\nimport { HashRouter, Redirect, Link } from 'react-router-dom';\r\n\r\nexport const LoginAdminHooks = () => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [RangerId, setRangerId] = useState(null)\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault();\r\n        setRedirect(true)\r\n        console.log(data);\r\n    }\r\n    const checkValue = () => {\r\n        console.log(\"CheckValue Here\");\r\n\r\n        const IdCheck = /^[a-zA-Z0-9!@#$%\\^&*)(+=._-]*$/\r\n        IdCheck.test(RangerId)\r\n        console.log(RangerId);\r\n\r\n    }\r\n    if (redirect) {\r\n\r\n        return (<Redirect to=\"/oicss/admin/getin\" />)\r\n    }\r\n\r\n    const changeValue = (e) => {\r\n\r\n        // if(e.target.name=='RangerID')\r\n        // {\r\n        //     const Ranger  =  {[e.target.name]:e.target.value}\r\n        //     const checkvalue = /^\\d+$/.test(Ranger)\r\n\r\n        //     if(!checkvalue){\r\n        //     return onSubmit();\r\n        //     console.log(\"RangerId\")\r\n        // }\r\n        // else{\r\n        //     return ;\r\n        // }\r\n        // }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <form className=\"\" onSubmit={handleSubmit(onSubmit)} >\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 \">\r\n                            {/* <div >\r\n                                <label for=\"name\">Email Id</label>\r\n                            </div> */}\r\n                            <div>\r\n                                <div class=\"input-group mb-3\">\r\n                                    <input type=\"text\" type=\"text\" id=\"forminput\" placeholder=\"Username or email\" name=\"email\"\r\n                                        onChange={changeValue}\r\n                                        ref={register({ required: true, maxLength: 30 })}\r\n                                        class=\"form-control\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n                                {errors.email && errors.email.type === \"required\" && \r\n                                <div className=\"container\" style={{ margin: \"10px\", color: \"red\" }}>\r\n                                    <div className=\"row\">\r\n                                        <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\" style={{ margin: \"5px\" }}></i>\r\n                                        <span>RangerId can not be Empty</span>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            {/* {errors.name && errors.name.type === \"maxLength\" && <span>Max length exceeded</span>} */}\r\n                            {/* <div>\r\n                                <label for=\"name\">Password</label>\r\n                            </div> */}\r\n                            <div class=\"input-group mb-3\">\r\n                                <input class=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"forminput\" name=\"Password\" ref={register({ required: true, maxLength: 30 })} />\r\n                            </div>\r\n\r\n                            {errors.Password && errors.Password.type === \"required\" && <div className=\"container\" style={{ margin: \"10px\", color: \"red\" }}>\r\n                                <div className=\"row\">\r\n                                    <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\" style={{ margin: \"5px\" }}></i>\r\n                                    <span>Password cannot be Empty</span>\r\n                                </div>\r\n                            </div>}\r\n\r\n\r\n                            \r\n                                <input type=\"submit\" className=\"btn  btn-form btn-block\" />\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"forgotCheck\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" name=\"check\"  id=\"defaultCheck1\" />\r\n                        <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                            Remember Me\r\n                        </label>\r\n                    </div>\r\n                    <div align=\"right\">\r\n                        <Link\r\n                            href=\"#\"\r\n                            variant=\"body2\"\r\n                            style={{ color: \"#00BBDC\" }}\r\n                        >\r\n                            <p>Forgot password?</p>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Login.css';\r\nimport { Router,Link } from \"react-router-dom\";\r\nimport { LoginAdminHooks } from '../../useHooks/LoginAdmin';\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formValues: {\r\n                email: \"\",\r\n                password: \"\"\r\n            },\r\n            formErrors: {\r\n                email: \"\",\r\n                password: \"\"\r\n            },\r\n            formValidity: {\r\n                email: false,\r\n                password: false\r\n            },\r\n            isSubmitting: false\r\n        };\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { formValues } = this.state;\r\n        formValues[target.name] = target.value;\r\n        this.setState({ formValues });\r\n        this.handleValidation(target);\r\n    };\r\n\r\n    handleValidation = target => {\r\n        const { name, value } = target;\r\n        const fieldValidationErrors = this.state.formErrors;\r\n        const validity = this.state.formValidity;\r\n        const isEmail = name === \"email\";\r\n        const isPassword = name === \"password\";\r\n        const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n        validity[name] = value.length > 0;\r\n        fieldValidationErrors[name] = validity[name]\r\n            ? \"\"\r\n            : `${name} is required and cannot be empty`;\r\n\r\n        if (validity[name]) {\r\n            if (isEmail) {\r\n                validity[name] = emailTest.test(value);\r\n                fieldValidationErrors[name] = validity[name]\r\n                    ? \"\"\r\n                    : `${name} should be a valid email address`;\r\n            }\r\n            if (isPassword) {\r\n                validity[name] = value.length >= 3;\r\n                fieldValidationErrors[name] = validity[name]\r\n                    ? \"\"\r\n                    : `${name} should be 3 characters minimum`;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            formValidity: validity\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ isSubmitting: true });\r\n        const { formValues, formValidity } = this.state;\r\n        if (Object.values(formValidity).every(Boolean)) {\r\n            alert(\"Form is validated! Submitting the form...\");\r\n            this.setState({ isSubmitting: false });\r\n        } else {\r\n            for (let key in formValues) {\r\n                let target = {\r\n                    name: key,\r\n                    value: formValues[key]\r\n                };\r\n                this.handleValidation(target);\r\n            }\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const { formValues, formErrors, isSubmitting } = this.state;\r\n\r\n        return (\r\n            <>\r\n            <div id=\"mainDiv\">\r\n                <div className=\"container login\">\r\n                    <div className=\"col-lg-4 col-sm-12 col-md-12\" id=\"logindiv\">\r\n                        <div className=\"row justify-content-center\" >\r\n                            <img style={{ height: \"100px\", width: '100px' }} src={require('../../../Assets/otoparkLogo.png')} alt=\"#otopark\" />\r\n                        </div>\r\n                        <div className=\"row justify-content-center\" style={{ paddingBottom: \"10px\" }}>\r\n\r\n                            <h3 className=\"welcometext\">\r\n                                Admin Login\r\n                            </h3>\r\n                            <small id=\"smalltxt\">Welcome back! Please login to continue.</small>\r\n                        </div>\r\n                        <LoginAdminHooks/>\r\n                        {/* <form className=\"\" onSubmit={this.handleSubmit} >\r\n                            <div className=\"form-group\">\r\n                                \r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"forminput\"\r\n                                    className={`form-control ${\r\n                                        formErrors.email ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                    placeholder=\"Email\"\r\n                                    onChange={this.handleChange}\r\n                                    value={formValues.email}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{formErrors.email}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                \r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"forminput\"\r\n                                    className={`form-control ${\r\n                                        formErrors.password ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={formValues.password}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{formErrors.password}</div>\r\n                            </div>\r\n                            <div className=\"forgotCheck\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\r\n                                        <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                            Remember Me\r\n                                        </label>\r\n                                </div>\r\n                                    <div align=\"right\">\r\n                                        <Link\r\n                                            href=\"#\"\r\n                                            variant=\"body2\"\r\n                                            style={{ color: \"#00BBDC\" }}\r\n                                        >\r\n                                            <p>Forgot password?</p>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn  btn-form btn-block\"\r\n                                    disabled={isSubmitting}\r\n                                    style={{ borderRadius: '20px' }}\r\n                                >\r\n                                    {isSubmitting ? \"Please wait...\" : \"Sign in\"}\r\n                                </button>\r\n                        </form> */}\r\n                            <div className=\" row justify-content-center\">\r\n                            New to Product? <Link><span className=\"request-text\"> Sign Up</span></Link>                            \r\n                            </div>\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"\" \r\n                    style={{ \r\n                        position: 'fixed',\r\n                        width: '100%',\r\n                        bottom: '0px',\r\n                        opacity:'8',\r\n                        paddingBottom:'0px !important',\r\n                        \r\n                }}\r\n                    >                                        \r\n                    <img style={{width:'100%',height:\"auto\"}} src={require('../../../Assets/mumbai.png')}/>\r\n                    </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/otoparkLogo.1f245880.png\";","module.exports = __webpack_public_path__ + \"static/media/mumbai.dae46001.png\";"],"sourceRoot":""}